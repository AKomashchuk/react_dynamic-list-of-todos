{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelect","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","value","placeholder","style","pointerEvents","get","url","delay","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","useState","user","setUser","useEffect","userId","href","email","name","App","setTodo","setTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51e69376.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId?: number,\n  onSelect?: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId = 0,\n  onSelect = () => {},\n}) => (\n  <table\n    data-cy=\"listOfTodos\"\n    className=\"table is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          className={classNames({\n            'has-background-info-light': selectedTodoId === todo.id,\n          })}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n          <td className=\"is-vcentered\">\n            <span className=\"icon\">\n              {todo.completed && (\n                <i className=\"fas fa-check\" />\n              )}\n            </span>\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelect(todo)}\n            >\n              <span className=\"icon\">\n                {selectedTodoId === todo.id ? (\n                  <i className=\"far fa-eye-slash\" />\n                ) : (\n                  <i className=\"far fa-eye\" />\n                )}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","export const TodoFilter = () => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select>\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"filterByTitle\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button type=\"button\" className=\"delete has-text\" />\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  return wait(1000)\n    .then(() => fetch(BASE_URL + url))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onClose: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onClose = () => {},\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div className=\"modal-card-title has-text-weight-medium\">\n              Todo&nbsp;#\n              {todo.id}\n            </div>\n\n            <a href=\"#close\" className=\"delete\" onClick={onClose}>\n              Close\n            </a>\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\">{todo.title}</p>\n\n            <p className=\"block\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={todos}\n                  selectedTodoId={todo?.id}\n                  onSelect={setTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && (\n        <TodoModal\n          todo={todo}\n          onClose={() => setTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}