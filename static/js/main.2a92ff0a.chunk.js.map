{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","filterTodos","setSelectedTodo","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","filteredTodos","setQuery","query","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","userId","useState","user","setUser","useEffect","getUser","href","email","name","App","todos","setTodos","setFilterTodos","visibleTodos","filtered","filter","uppQuery","toUpperCase","includes","includesQuery","list","active","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a92ff0a.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  filterTodos: Todo[],\n  setSelectedTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  filterTodos,\n  setSelectedTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {filterTodos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={\n            selectedTodo?.id !== todo.id ? '' : 'has-background-info-light'\n          }\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          ) : (\n            <td className=\"is-vcentered\" />\n          )}\n\n          {todo.completed ? (\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">{todo.title}</p>\n            </td>\n          ) : (\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">{todo.title}</p>\n            </td>\n          )}\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={\n                  selectedTodo?.id !== todo.id\n                    ? 'far fa-eye'\n                    : 'far fa-eye-slash'\n                }\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  filteredTodos: (value: string) => void,\n  setQuery: (value: string) => void,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filteredTodos,\n  setQuery,\n  query,\n}) => {\n  const reset = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => filteredTodos(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\ntype Props = {\n  onClose: () => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoModal: React.FC<Props> = ({ onClose, selectedTodo }) => {\n  const {\n    title,\n    completed,\n    userId,\n    id,\n  } = selectedTodo || {};\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (userId) {\n      getUser(+userId).then(setUser);\n    }\n  }, []);\n\n  return (\n\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {completed ? (\n                <strong className=\"has-text-success\">\n                  Done\n                </strong>\n              ) : (\n                <strong className=\"has-text-danger\">\n                  Planned\n                </strong>\n              )}\n\n              {' by '}\n\n              <a href={user?.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterTodos, setFilterTodos] = useState<Todo[]>(todos);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todo => {\n        setFilterTodos(todo);\n        setTodos(todo);\n      });\n  }, []);\n\n  const getFilteredTodos = (list: string) => {\n    const completed = todos.filter(todo => todo.completed === false);\n    const active = todos.filter(todo => todo.completed === true);\n\n    switch (list) {\n      case 'active':\n        return setFilterTodos(active);\n\n      case 'completed':\n        return setFilterTodos(completed);\n\n      default:\n        return setFilterTodos(todos);\n    }\n  };\n\n  function includesQuery(value: string) {\n    const uppQuery = query.toUpperCase();\n\n    return value.toUpperCase().includes(uppQuery);\n  }\n\n  const visibleTodos = () => {\n    const filtered = [...todos].filter(todo => {\n      return includesQuery(todo.title);\n    });\n\n    return setFilterTodos(filtered);\n  };\n\n  useEffect(() => {\n    visibleTodos();\n  }, [query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filteredTodos={getFilteredTodos}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              { !todos.length ? (\n                <Loader />\n              )\n                : (\n                  <TodoList\n                    filterTodos={filterTodos}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          onClose={() => setSelectedTodo(null)}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}